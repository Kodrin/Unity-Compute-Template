// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

#include "particledata.cginc"

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWStructuredBuffer<ParticleData> _ParticleBuffer;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!
    int idx = id.x;
    ParticleData p = _ParticleBuffer[idx];

    float3 particle_pos = p.position;
    float3 particle_vel = p.velocity;


    p.position = particle_pos;
    p.velocity = particle_vel;

    _ParticleBuffer[idx] = p;

    // Result[id.xy] = float4(id.x & id.y, (id.x & 15)/15.0, (id.y & 15)/15.0, 0.0);
}
